#include <iostream>
#include <vector>
#include <string>
#include <stack>
#include <queue>
#include <algorithm>
using namespace std;

class Pengguna {
private:
    string namaPengguna;
    string kataSandi;

public:
    Pengguna(string p, string k) : namaPengguna(p), kataSandi(k) {}

    string getNamaPengguna() const {
        return namaPengguna;
    }
    string getKataSandi() const {
        return kataSandi;
    }

    void setNamaPengguna(const string& p) {
        namaPengguna = p;
    }
    void setKataSandi(const string& k) {
        kataSandi = k;
    }
};

class Kue {
public:
    string nama;
    string deskripsi;
    double harga;

    Kue(string n, string d, double h) : nama(n), deskripsi(d), harga(h) {}
};

class Pesanan {
public:
    Kue kue;
    string rasa;
    string ukuran;
    double totalHarga;

    Pesanan(Kue k, string r, string u, double th) : kue(k), rasa(r), ukuran(u), totalHarga(th) {}
};

vector<Pengguna> pengguna;
vector<Kue> kue;
vector<Pesanan> pesanan;

bool registrasiPengguna(string namaPengguna, string kataSandi) {
    for (const auto& p : pengguna) {
        if (p.getNamaPengguna() == namaPengguna) {
            return false;
        }
    }
    pengguna.push_back(Pengguna(namaPengguna, kataSandi));
    return true;
}

bool loginPengguna(string namaPengguna, string kataSandi) {
    for (const auto& p : pengguna) {
        if (p.getNamaPengguna() == namaPengguna && p.getKataSandi() == kataSandi) {
            return true;
        }
    }
    return false;
}

void tampilkanKue() {
    cout << "DAftar katalog kue yang tersedia: " << endl;
    for (size_t i = 0; i < kue.size(); ++i) {
        cout << i + 1 << ". " << kue[i].nama << ": " << kue[i].deskripsi << " - Rp" << kue[i].harga << endl;
    }
}
